
//FULL ADDER in GATE LEVEL MODLLING

module fulladder_glm (a,b,cin,sum,carry);

input a,b,cin;
output sum,carry;
wire u;
wire p,q,r;

xor g1(u,a,b);
xor g2 (sum,u,cin);
and g3 (p,a,b);
and g4(q,b,cin);
and g5 (r,a,cin);
or g6 (carry,p,q,r);
endmodule;

//FULL ADDER in DATAFLOW MODLLING

module fulladder_dlm (a,b,cin,sum,carry);

input a,b,cin;
output sum,carry;

assign sum = ((a^b)^cin);
assign carry  = ((a&b)|(b&cin)|(a&cin));

endmodule;

//FULL ADDER in BEHAVIORAL LEVEL MODLLING

module fulladder_blm (a,b,cin,sum,carry);

input a,b,cin;
output sum,carry;

assign {sum,carry} = a+b+cin;

endmodule;

//TESTBENCH

module fulladder_allmods_tb();

reg a,b,cin;
wire sum,carry;

fulladder_allmods DUT (.a(a),.b(b),.cin(cin),.sum(sum),.carry(carry));

initial 
begin
 a = 0;b = 0;cin = 0;
end
initial 
begin
#5 a = 0;b = 0;cin = 1;
#5 a = 0;b = 1;cin = 0;
#5 a = 0;b = 1;cin = 1;
#5 a = 1;b = 0;cin = 0;
#5 a = 1;b = 0;cin = 1;
#5 a = 1;b = 1;cin = 0;
#5 a = 1;b = 1;cin = 1;
end

initial 
begin 
$monitor ( $time,"input a = %b,b = %b, cin = %b, output sum= %b,carry= %b,",a,b,cin,sum,carry);
end
endmodule;

